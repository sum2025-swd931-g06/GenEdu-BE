services:
  postgresql:
    container_name: ms_pg_sql
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      PGDATA: /var/lib/postgresql/data/pgdata
      # Performance optimizations
      POSTGRES_INITDB_ARGS: "--data-checksums"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /DATA/AppData/genedu/postgres/postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql:ro
    hostname: postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      start_period: 20s
      interval: 15s
      timeout: 5s
      retries: 3
    ports:
      - "5434:5432"
    secrets:
      - postgres_password
    networks:
      - microservices-net
    restart: unless-stopped
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Security improvements
    user: postgres
    tmpfs:
      - /tmp
      - /var/run/postgresql

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGLADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_DISABLE_POSTFIX: "True"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin_data:/var/lib/pgladmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped
    depends_on:
      postgresql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    hostname: zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net
    restart: unless-stopped
    # Resource limits for Zipkin
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      - STORAGE_TYPE=mem
      - JAVA_OPTS=-Xms256m -Xmx512m

  config-server:
    container_name: config-server
    image: chauvinhtien/genedu-config-server:latest
    ports:
      - "8888:8888"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8888/actuator/health",
        ]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s
    env_file:
      - .env.deployment
    networks:
      - microservices-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  discovery-service:
    container_name: discovery
    hostname: discovery
    image: chauvinhtien/genedu-discovery:latest
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8761/actuator/health",
        ]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 45s
    ports:
      - "8761:8761"
    env_file:
      - .env.deployment
    networks:
      - microservices-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  gateway-service:
    container_name: gateway
    hostname: gateway
    image: chauvinhtien/genedu-gateway:latest
    ports:
      - "8222:8222"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8222/actuator/health",
        ]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 60s
    env_file:
      - .env.deployment
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - microservices-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  content-service:
    container_name: content
    image: chauvinhtien/genedu-content:latest
    hostname: content
    env_file:
      - .env.deployment
    ports:
      - "8091:8091"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8091/actuator/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      gateway-service:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    networks:
      - microservices-net
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

# Named volumes for better data management
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  microservices-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

secrets:
  postgres_password:
    file: secret.postgres_password.txt
