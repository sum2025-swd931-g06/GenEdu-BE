# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: media-cd-flow

on:
  push:
    branches: [ "main-deployment" ]
    paths:
      - "services/media/**"
      - ".github/workflows/media-service-cd.yml"
      - "pom.xml"
  pull_request:
    branches: [ "main-deployment" ]
    paths:
      - "services/media/**"
      - ".github/workflows/media-service-cd.yml"
      - "pom.xml"

jobs:
  build-media:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build main project
        run: mvn clean install -N

      - name: Build common library
        run: mvn clean install -f services/common-library/pom.xml -DskipTests

      - name: Build service with Maven
        run: mvn clean install -f services/media/pom.xml -DskipTests

      - name: Log in to the Container registry
        if: ${{ github.ref == 'refs/heads/main-deployment' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        if: ${{ github.ref == 'refs/heads/main-deployment' }}
        uses: docker/build-push-action@v6
        with:
          context: ./services/media
          push: true
          tags: chauvinhtien/genedu-media:latest
